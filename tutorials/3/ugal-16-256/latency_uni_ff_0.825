BEGIN Configuration File: ../../booksim2/src/examples/flatflyconfig
// $Id$

// Copyright (c) 2007-2015, Trustees of The Leland Stanford Junior University
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

//A flattened butterfly configurate file with many tweaks from the
//default settings. 


// Flow control
// Total number of VCs must match the above assignments
num_vcs     = 2;
vc_buf_size = 16;

wait_for_tail_credit = 0;

//
// Router architectureq
//
vc_allocator = islip; 
sw_allocator = islip;
alloc_iters  = 3;

credit_delay   = 0;
routing_delay  = 1;
vc_alloc_delay = 1;
sw_alloc_delay = 1;
st_final_delay = 1;

input_speedup     = 1;
output_speedup    = 1;
internal_speedup  = 1.6;

//
// Traffic
//

warmup_periods = 3;

sample_period  = 1000;  

sim_count          = 1;

traffic       = bitrev;


// Flatfly 
//
// #node = k^(n+1)
//
// x, y, specifies the arrangement of routers in x and y dim
// xr, yr specifiies the arayment of clients in a router
//
topology = flatfly;
subnets = 1;

c  = 16;
k  = 16;
n  = 1;

x  = 16;
y  = 1;
xr = 16;
yr = 1;

use_noc_latency = 0;

//
// Routing
//

routing_function = ran_min;

//1: batch mode, 0: injection mode
use_read_write = 0;

//for injection mode
packet_size = 1;
injection_rate = 0.1;

//for batch mode
read_request_size=1;
write_request_size=1;
read_reply_size=1;
write_reply_size=1;

read_request_begin_vc  = 0;
read_request_end_vc    = 3;
write_reply_begin_vc   = 4;
write_reply_end_vc     = 7;
read_reply_begin_vc    = 4;
read_reply_end_vc      = 7;
write_request_begin_vc = 0;
write_request_end_vc   = 3;

//latency: drains all packet, throughput:no drain?
sim_type = latency;

watch_out = -;;END Configuration File: ../../booksim2/src/examples/flatflyconfig
OVERRIDE Parameter: routing_function=ugal
OVERRIDE Parameter: traffic=uniform
OVERRIDE Parameter: injection_rate={0.825}
OVERRIDE Parameter: c=16
OVERRIDE Parameter: k=16
OVERRIDE Parameter: x=16
OVERRIDE Parameter: xr=16
OVERRIDE Parameter: sim_type=latency
OVERRIDE Parameter: seed=1
 Flat Bufferfly 
 k = 16 n = 1 c = 16
 each switch - total radix =  31
 # of switches = 16
 # of channels = 240
 # of nodes ( size of network ) = 256
0 | node1 | Enqueuing flit 1 (packet 1) at time 0.
0 | traffic_manager | Finding output VC for flit 1:
0 | traffic_manager |   Selected output VC 0.
0 | node1 | Injecting flit 1 into subnet 0 at time 0 with priority 0.
1 | network_0/network_0_fchan_ingress1 | Beginning channel traversal for flit 1 with delay 1.
1 | network_0/network_0_fchan_ingress1 | Completed channel traversal for flit 1.
2 | network_0/router_0 | Received flit 1 from channel at input 1.
2 | network_0/router_0 | Adding flit 1 to VC 0 at input 1 (state: idle, empty).
2 | network_0/router_0/buf_1/vc_0 | Changing state from idle to routing.
2 | network_0/router_0 | Beginning routing for VC 0 at input 1 (front: 1).
2 | network_0/router_0 | Completed routing for VC 0 at input 1 (front: 1).
2 | network_0/router_0 |  MIN tmp_out_port: 202 | network_0/router_0 |  NONMIN tmp_out_port: 22
2 | network_0/router_0/buf_1/vc_0 | Changing state from routing to vc_alloc.
3 | network_0/router_0 | Beginning VC allocation for VC 0 at input 1 (front: 1).
3 | network_0/router_0 |   Requesting VC 1 at output 20 (in_pri: 0, out_pri: 0).
3 | network_0/router_0/vc_allocator | Input requests = [ 0 -> [ 12@0 13@0 ]  2 -> [ 41@0 ]  4 -> [ 57@0 ]  6 -> [ 33@0 ]  8 -> [ 37@0 ]  10 -> [ 43@0 ]  12 -> [ 49@0 ]  14 -> [ 55@0 ]  16 -> [ 53@0 ]  18 -> [ 57@0 ]  20 -> [ 37@0 ]  22 -> [ 33@0 ]  24 -> [ 53@0 ]  26 -> [ 43@0 ]  30 -> [ 53@0 ]  ], output requests = [ 12 -> [ 0@0 ]  13 -> [ 0@0 ]  33 -> [ 6@0 22@0 ]  37 -> [ 8@0 20@0 ]  41 -> [ 2@0 ]  43 -> [ 10@0 26@0 ]  49 -> [ 12@0 ]  53 -> [ 16@0 24@0 30@0 ]  55 -> [ 14@0 ]  57 -> [ 4@0 18@0 ]  ].
3 | network_0/router_0/vc_allocator | Input grants = [ 0 -> 12  2 -> 41  4 -> 57  6 -> 33  8 -> 37  10 -> 43  12 -> 49  14 -> 55  16 -> 53  ], output grants = [ 12 -> 0  33 -> 6  37 -> 8  41 -> 2  43 -> 10  49 -> 12  53 -> 16  55 -> 14  57 -> 4  ].
3 | network_0/router_0 | Assigning VC 1 at output 20 to VC 0 at input 1.
3 | network_0/router_0 | Completed VC allocation for VC 0 at input 1 (front: 1).
3 | network_0/router_0 |   Acquiring assigned VC 1 at output 20.
3 | network_0/router_0/buf_1/vc_0 | Changing state from vc_alloc to active.
3 | network_0/router_0 | Beginning switch allocation for VC 0 at input 1 (front: 1).
3 | network_0/router_0 |   Requesting output 20.0 (non-spec, pri: 0).
3 | network_0/router_0/sw_allocator | Input requests = [ 0 -> [ 6@0 ]  1 -> [ 20@0 ]  2 -> [ 28@0 ]  3 -> [ 16@0 ]  4 -> [ 18@0 ]  5 -> [ 21@0 ]  6 -> [ 24@0 ]  7 -> [ 27@0 ]  8 -> [ 26@0 ]  ], output requests = [ 6 -> [ 0@0 ]  16 -> [ 3@0 ]  18 -> [ 4@0 ]  20 -> [ 1@0 ]  21 -> [ 5@0 ]  24 -> [ 6@0 ]  26 -> [ 8@0 ]  27 -> [ 7@0 ]  28 -> [ 2@0 ]  ].
3 | network_0/router_0/sw_allocator | Input grants = [ 0 -> 6  1 -> 20  2 -> 28  3 -> 16  4 -> 18  5 -> 21  6 -> 24  7 -> 27  8 -> 26  ], output grants = [ 6 -> 0  16 -> 3  18 -> 4  20 -> 1  21 -> 5  24 -> 6  26 -> 8  27 -> 7  28 -> 2  ].
3 | network_0/router_0 | Assigning output 20.0 to VC 0 at input 1.0.
3 | network_0/router_0 | Completed switch allocation for VC 0 at input 1 (front: 1).
3 | network_0/router_0 |   Scheduling switch connection from input 1.0 to output 20.0.
4 | network_0/router_0 | Beginning crossbar traversal for flit 1 from input 1.0 to output 20.0.
4 | network_0/router_0 | Completed crossbar traversal for flit 1 from input 1.0 to output 20.0.
4 | network_0/router_0 | Buffering flit 1 at output 20.
4 | network_0/router_0 | Sending flit 1 to channel at output 20.
5 | network_0/network_0_fchan_4 | Beginning channel traversal for flit 1 with delay 1.
5 | network_0/network_0_fchan_4 | Completed channel traversal for flit 1.
6 | network_0/router_5 | Received flit 1 from channel at input 16.
6 | network_0/router_5 | Adding flit 1 to VC 1 at input 16 (state: idle, empty).
6 | network_0/router_5/buf_16/vc_1 | Changing state from idle to routing.
6 | network_0/router_5 | Beginning routing for VC 1 at input 16 (front: 1).
6 | network_0/router_5 | Completed routing for VC 1 at input 16 (front: 1).
6 | network_0/router_5/buf_16/vc_1 | Changing state from routing to vc_alloc.
6 | network_0/router_5 | Beginning VC allocation for VC 1 at input 16 (front: 1).
6 | network_0/router_5 |   Requesting VC 0 at output 9 (in_pri: 0, out_pri: 0).
6 | network_0/router_5 |   Requesting VC 1 at output 9 (in_pri: 0, out_pri: 0).
6 | network_0/router_5/vc_allocator | Input requests = [ 2 -> [ 35@0 ]  3 -> [ 45@0 ]  4 -> [ 57@0 ]  5 -> [ 47@0 ]  6 -> [ 41@0 ]  8 -> [ 45@0 ]  10 -> [ 57@0 ]  13 -> [ 45@0 ]  15 -> [ 41@0 ]  19 -> [ 53@0 ]  20 -> [ 35@0 ]  21 -> [ 57@0 ]  26 -> [ 47@0 ]  27 -> [ 47@0 ]  31 -> [ 30@0 31@0 ]  33 -> [ 18@0 19@0 ]  35 -> [ 14@0 15@0 ]  37 -> [ 12@0 13@0 ]  39 -> [ 4@0 5@0 ]  41 -> [ 20@0 21@0 ]  43 -> [ 2@0 3@0 ]  45 -> [ 4@0 5@0 ]  47 -> [ 28@0 29@0 ]  53 -> [ 26@0 27@0 ]  55 -> [ 12@0 13@0 ]  57 -> [ 18@0 19@0 ]  59 -> [ 2@0 3@0 ]  61 -> [ 2@0 3@0 ]  ], output requests = [ 2 -> [ 43@0 59@0 61@0 ]  3 -> [ 43@0 59@0 61@0 ]  4 -> [ 39@0 45@0 ]  5 -> [ 39@0 45@0 ]  12 -> [ 37@0 55@0 ]  13 -> [ 37@0 55@0 ]  14 -> [ 35@0 ]  15 -> [ 35@0 ]  18 -> [ 33@0 57@0 ]  19 -> [ 33@0 57@0 ]  20 -> [ 41@0 ]  21 -> [ 41@0 ]  26 -> [ 53@0 ]  27 -> [ 53@0 ]  28 -> [ 47@0 ]  29 -> [ 47@0 ]  30 -> [ 31@0 ]  31 -> [ 31@0 ]  35 -> [ 2@0 20@0 ]  41 -> [ 6@0 15@0 ]  45 -> [ 3@0 8@0 13@0 ]  47 -> [ 5@0 26@0 27@0 ]  53 -> [ 19@0 ]  57 -> [ 4@0 10@0 21@0 ]  ].
6 | network_0/router_5/vc_allocator | Input grants = [ 2 -> 35  3 -> 45  6 -> 41  19 -> 53  21 -> 57  26 -> 47  31 -> 30  33 -> 18  35 -> 14  37 -> 12  39 -> 4  41 -> 20  43 -> 2  47 -> 28  53 -> 26  ], output grants = [ 2 -> 43  4 -> 39  12 -> 37  14 -> 35  18 -> 33  20 -> 41  26 -> 53  28 -> 47  30 -> 31  35 -> 2  41 -> 6  45 -> 3  47 -> 26  53 -> 19  57 -> 21  ].
6 | network_0/router_5 | Assigning VC 0 at output 9 to VC 1 at input 16.
6 | network_0/router_5 | Completed VC allocation for VC 1 at input 16 (front: 1).
6 | network_0/router_5 |   Acquiring assigned VC 0 at output 9.
6 | network_0/router_5/buf_16/vc_1 | Changing state from vc_alloc to active.
7 | network_0/router_5 | Beginning switch allocation for VC 1 at input 16 (front: 1).
7 | network_0/router_5 |   Requesting output 9.0 (non-spec, pri: 0).
7 | network_0/router_5/sw_allocator | Input requests = [ 1 -> [ 17@0 22@0 ]  3 -> [ 20@0 ]  9 -> [ 26@0 ]  10 -> [ 28@0 ]  13 -> [ 23@0 ]  15 -> [ 15@0 ]  16 -> [ 9@0 ]  17 -> [ 7@0 ]  18 -> [ 6@0 ]  19 -> [ 2@0 ]  20 -> [ 10@0 ]  21 -> [ 1@0 ]  23 -> [ 14@0 ]  26 -> [ 13@0 ]  ], output requests = [ 1 -> [ 21@0 ]  2 -> [ 19@0 ]  6 -> [ 18@0 ]  7 -> [ 17@0 ]  9 -> [ 16@0 ]  10 -> [ 20@0 ]  13 -> [ 26@0 ]  14 -> [ 23@0 ]  15 -> [ 15@0 ]  17 -> [ 1@0 ]  20 -> [ 3@0 ]  22 -> [ 1@0 ]  23 -> [ 13@0 ]  26 -> [ 9@0 ]  28 -> [ 10@0 ]  ].
7 | network_0/router_5/sw_allocator | Input grants = [ 1 -> 17  3 -> 20  9 -> 26  10 -> 28  13 -> 23  15 -> 15  16 -> 9  17 -> 7  18 -> 6  19 -> 2  20 -> 10  21 -> 1  23 -> 14  26 -> 13  ], output grants = [ 1 -> 21  2 -> 19  6 -> 18  7 -> 17  9 -> 16  10 -> 20  13 -> 26  14 -> 23  15 -> 15  17 -> 1  20 -> 3  23 -> 13  26 -> 9  28 -> 10  ].
7 | network_0/router_5 | Assigning output 9.0 to VC 1 at input 16.0.
7 | network_0/router_5 | Completed switch allocation for VC 1 at input 16 (front: 1).
7 | network_0/router_5 |   Scheduling switch connection from input 16.0 to output 9.0.
8 | network_0/router_5 | Beginning crossbar traversal for flit 1 from input 16.0 to output 9.0.
8 | network_0/router_5 | Completed crossbar traversal for flit 1 from input 16.0 to output 9.0.
8 | network_0/router_5 | Buffering flit 1 at output 9.
8 | network_0/router_5 | Sending flit 1 to channel at output 9.
9 | network_0/network_0_fchan_egress89 | Beginning channel traversal for flit 1 with delay 1.
9 | network_0/network_0_fchan_egress89 | Completed channel traversal for flit 1.
10 | node89 | Ejecting flit 1 (packet 1) from VC 0.
10 | node89 | Injecting credit for VC 0 into subnet 0.
10 | node89 | Retiring flit 1 (packet 1, src = 1, dest = 89, hops = 2, flat = 10).
10 | node89 | Retiring packet 1 (plat = 10, nlat = 10, frag = 0, src = 1, dest = 89).
Class 0:
Packet latency average = 209.582
	minimum = 5
	maximum = 497
Network latency average = 78.3069
	minimum = 5
	maximum = 226
Slowest packet = 23327
Flit latency average = 78.3069
	minimum = 5
	maximum = 226
Slowest flit = 50422
Fragmentation average = 0
	minimum = 0
	maximum = 0
Injected packet rate average = 0.529148
	minimum = 0.459 (at node 177)
	maximum = 0.604 (at node 247)
Accepted packet rate average = 0.487016
	minimum = 0.425 (at node 143)
	maximum = 0.559 (at node 4)
Injected flit rate average = 0.529148
	minimum = 0.459 (at node 177)
	maximum = 0.604 (at node 247)
Accepted flit rate average= 0.487016
	minimum = 0.425 (at node 143)
	maximum = 0.559 (at node 4)
Injected packet length average = 1
Accepted packet length average = 1
Total in-flight flits = 10944 (0 measured)
latency change    = 1
throughput change = 1
Class 0:
Packet latency average = 411.314
	minimum = 5
	maximum = 978
Network latency average = 82.0796
	minimum = 5
	maximum = 260
Slowest packet = 23327
Flit latency average = 82.0796
	minimum = 5
	maximum = 260
Slowest flit = 103452
Fragmentation average = 0
	minimum = 0
	maximum = 0
Injected packet rate average = 0.509955
	minimum = 0.453 (at node 110)
	maximum = 0.5705 (at node 60)
Accepted packet rate average = 0.489
	minimum = 0.441 (at node 118)
	maximum = 0.546 (at node 4)
Injected flit rate average = 0.509955
	minimum = 0.453 (at node 110)
	maximum = 0.5705 (at node 60)
Accepted flit rate average= 0.489
	minimum = 0.441 (at node 118)
	maximum = 0.546 (at node 4)
Injected packet length average = 1
Accepted packet length average = 1
Total in-flight flits = 10887 (0 measured)
latency change    = 0.490458
throughput change = 0.00405803
Class 0:
Packet latency average = 1017.34
	minimum = 651
	maximum = 1452
Network latency average = 85.8573
	minimum = 33
	maximum = 255
Slowest packet = 252902
Flit latency average = 85.8573
	minimum = 33
	maximum = 255
Slowest flit = 350535
Fragmentation average = 0
	minimum = 0
	maximum = 0
Injected packet rate average = 0.490422
	minimum = 0.439 (at node 167)
	maximum = 0.55 (at node 223)
Accepted packet rate average = 0.490578
	minimum = 0.438 (at node 10)
	maximum = 0.562 (at node 136)
Injected flit rate average = 0.490422
	minimum = 0.439 (at node 167)
	maximum = 0.55 (at node 223)
Accepted flit rate average= 0.490578
	minimum = 0.438 (at node 10)
	maximum = 0.562 (at node 136)
Injected packet length average = 1
Accepted packet length average = 1
Total in-flight flits = 10834 (0 measured)
latency change    = 0.595695
throughput change = 0.00321687
Average latency for class 0 exceeded 500 cycles. Aborting simulation.
Too many sample periods needed to converge
Simulation unstable, ending ...
Total run time 32.8249
